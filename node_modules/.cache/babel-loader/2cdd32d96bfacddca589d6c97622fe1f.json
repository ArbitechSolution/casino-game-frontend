{"ast":null,"code":"import _classCallCheck from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/src/App/Components/User/Stat/index.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Card, Modal } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport Swal from 'sweetalert2';\nimport Details from \"./Details\";\nimport socket from \"../../../../Socket\";\nimport storage from \"../../../../Storage\";\nimport { decode, encode, wait } from \"../../../../Helper\";\nimport C from \"../../../../Constant\";\n\nvar Stat = /*#__PURE__*/function (_Component) {\n  _inherits(Stat, _Component);\n\n  var _super = _createSuper(Stat);\n\n  function Stat(props) {\n    var _this;\n\n    _classCallCheck(this, Stat);\n\n    _this = _super.call(this, props);\n    _this._isMounted = false;\n    _this.state = {\n      data: [],\n      user: null,\n      loading: true,\n      forUser: null\n    };\n    return _this;\n  }\n\n  _createClass(Stat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      socket.on(C.USER_INFO, function (data) {\n        return _this2.userInfo(decode(data));\n      });\n      this.setState({\n        user: null,\n        data: [],\n        loading: true\n      });\n      var username = this.props.params.pathname;\n      username = username.replace('/user/', '');\n      this.getUserInfo(username);\n      wait(500).then(function () {\n        _this2.setState({\n          user: username,\n          forUser: username\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.setState({\n        user: null,\n        loading: true,\n        data: []\n      });\n    }\n  }, {\n    key: \"userInfo\",\n    value: function userInfo(response) {\n      if (this._isMounted) {\n        this.setState({\n          forUser: response.name\n        });\n\n        if (response.status === false) {\n          this.setState({\n            user: null,\n            loading: true,\n            data: []\n          });\n          return Swal.fire('User Not Found !');\n        } //Prevent from opening other user on modal\n\n\n        if (this.state.user === this.state.forUser) {\n          this.setState({\n            data: response,\n            loading: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(name) {\n      socket.emit(C.USER_INFO, encode({\n        name: name,\n        coin: this.props.coin,\n        game: 'all'\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          username = _this$props.username,\n          isWinner = _this$props.isWinner,\n          chart_coin = _this$props.chart_coin,\n          cssClass = _this$props.cssClass;\n      chart_coin = \"btc\";\n      if (isWinner === true) cssClass = 'text-success';\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"User Profile\")), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        xl: 7,\n        md: 10,\n        sm: 12,\n        className: 'm-auto',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        className: \"user-modal-bg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          background: '#2f3138',\n          border: 0\n        },\n        closeButton: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, \"User Information\")), !this.state.loading && this.state.data && /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }\n      }, this._isMounted && this.state.data.name && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Details, {\n        t: this.props.t,\n        changeCoinLoader: false,\n        token: this.state.data.id,\n        name: this.state.data.name,\n        coin: chart_coin,\n        data: this.state.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }\n      })), !this.state.data.name && /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }\n      }, \"User Not Found\")), this.state.loading && /*#__PURE__*/React.createElement(Modal.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"spinner-border text-info\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      })))))));\n    }\n  }]);\n\n  return Stat;\n}(Component);\n\nStat.propTypes = {\n  chart_coin: PropTypes.string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    chart_coin: state.items.chart_coin\n  };\n};\n\nexport default connect(mapStateToProps, {})(Stat);","map":{"version":3,"names":["React","Component","Row","Col","Card","Modal","PropTypes","connect","Helmet","Swal","Details","socket","storage","decode","encode","wait","C","Stat","props","_isMounted","state","data","user","loading","forUser","on","USER_INFO","userInfo","setState","username","params","pathname","replace","getUserInfo","then","response","name","status","fire","emit","coin","game","isWinner","chart_coin","cssClass","background","border","t","id","propTypes","string","mapStateToProps","items"],"sources":["/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/src/App/Components/User/Stat/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport {Row, Col, Card, Modal} from \"react-bootstrap\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport Swal from 'sweetalert2';\r\nimport Details from \"./Details\";\r\nimport socket from \"../../../../Socket\";\r\nimport storage from \"../../../../Storage\";\r\nimport {decode, encode, wait} from \"../../../../Helper\";\r\nimport C from \"../../../../Constant\";\r\n\r\nclass Stat extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            user: null,\r\n            loading: true,\r\n            forUser: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n\r\n        socket.on(C.USER_INFO, data => this.userInfo(decode(data)));\r\n\r\n        this.setState({ user: null, data: [], loading: true });\r\n\r\n        let username = this.props.params.pathname;\r\n        username = username.replace('/user/','');\r\n        this.getUserInfo(username);\r\n\r\n        wait(500).then(() => {\r\n            this.setState({ user: username, forUser: username });\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n        this.setState({ user: null, loading: true, data: []});\r\n    }\r\n    \r\n    userInfo(response){\r\n        if(this._isMounted)\r\n        {\r\n            this.setState({ forUser: response.name });\r\n\r\n            if(response.status === false){\r\n                this.setState({ user: null, loading: true, data: []});\r\n                return Swal.fire('User Not Found !');\r\n            }\r\n\r\n            //Prevent from opening other user on modal\r\n            if(this.state.user === this.state.forUser){\r\n                this.setState({ data: response, loading: false } );\r\n            }\r\n        }\r\n    }\r\n\r\n    getUserInfo(name){\r\n        socket.emit(C.USER_INFO, encode({name: name, coin: this.props.coin, game: 'all'}));\r\n    }\r\n\r\n    render(){\r\n        let {username, isWinner, chart_coin, cssClass} = this.props;\r\n        chart_coin =  \"btc\";\r\n\r\n        if(isWinner === true)\r\n            cssClass = 'text-success';\r\n\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                        <title>User Profile</title>\r\n                </Helmet>\r\n                <Row>\r\n                    <Col xl={7} md={10}  sm={12} className={'m-auto'}>\r\n                        <Card className=\"user-modal-bg\">\r\n                            <Card.Header style={{ background: '#2f3138', border: 0 }} closeButton>\r\n                                <Card.Title>User Information</Card.Title>\r\n                            </Card.Header>\r\n                            {!this.state.loading && this.state.data &&\r\n                            <Card.Body>\r\n                                {this._isMounted && this.state.data.name &&\r\n                                <div className=\"container-fluid\">\r\n                                    <Details t={this.props.t} changeCoinLoader={false} token={this.state.data.id} name={this.state.data.name} coin={chart_coin} data={this.state.data} />\r\n                                </div>\r\n                                }\r\n                                {!this.state.data.name &&\r\n                                    <h2 className=\"text-center\">User Not Found</h2>\r\n                                }\r\n                            </Card.Body>\r\n                            }\r\n                            {this.state.loading &&\r\n                                <Modal.Body>\r\n                                    <div className=\"text-center\">\r\n                                        <div className=\"spinner-border text-info\" role=\"status\" />\r\n                                    </div>\r\n                                </Modal.Body>\r\n                            }\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nStat.propTypes = {\r\n    chart_coin: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    chart_coin: state.items.chart_coin\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Stat);"],"mappings":"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"},"metadata":{},"sourceType":"module"}