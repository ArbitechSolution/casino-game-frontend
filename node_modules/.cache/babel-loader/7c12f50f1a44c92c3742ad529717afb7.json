{"ast":null,"code":"import _classCallCheck from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/src/App/Pages/Leaderboard/index.js\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\nimport storage from \"../../../Storage\";\nimport socket from \"../../../Socket\";\nimport { forceSatoshiFormat, wait, __ } from \"../../../Helper\";\nimport C from \"../../../Constant\";\nimport UserModal from \"../../Components/User/Stat/Modal\";\n\nvar Leaderboard = /*#__PURE__*/function (_React$Component) {\n  _inherits(Leaderboard, _React$Component);\n\n  var _super = _createSuper(Leaderboard);\n\n  function Leaderboard(props) {\n    var _this;\n\n    _classCallCheck(this, Leaderboard);\n\n    _this = _super.call(this, props);\n\n    _this.makeList = function (data) {\n      wait(500).then(function () {\n        _this.setState({\n          loading: false,\n          players: data\n        });\n      });\n    };\n\n    _this.state = {\n      loading: true,\n      players: []\n    };\n    return _this;\n  }\n\n  _createClass(Leaderboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.emit(C.TOP_WINNERS);\n      socket.on(C.TOP_WINNERS, function (data) {\n        return _this2.makeList(data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var t = this.props.t;\n      var list = this.state.players.map(function (player, i) {\n        return /*#__PURE__*/React.createElement(Players, {\n          key: i,\n          medal: i + 1,\n          player: player,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, \"Leaderboard - Original Crash Game\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: 'table-responsive last-bets num-style mb-0',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"spinner-grow text-white my-3\",\n        role: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      })) : /*#__PURE__*/React.createElement(Table, {\n        className: \"mb-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 33\n        }\n      }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 33\n        }\n      }, t('username')), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 33\n        }\n      }, t('wagered')), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 33\n        }\n      }, t('prize')), /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, t('medal')))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      }, list))));\n    }\n  }]);\n\n  return Leaderboard;\n}(React.Component);\n\nvar Players = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Players, _React$Component2);\n\n  var _super2 = _createSuper(Players);\n\n  function Players(props) {\n    _classCallCheck(this, Players);\n\n    return _super2.call(this, props);\n  }\n\n  _createClass(Players, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          player = _this$props.player,\n          medal = _this$props.medal;\n      var num = medal;\n      console.log(player);\n\n      if (medal === 10) {\n        medal = 1;\n      }\n\n      var coin = \"btc\";\n      var username = player.name;\n      var avatar = player.avatar;\n      var wagered = forceSatoshiFormat(player.profit_high[coin]);\n      var prize = forceSatoshiFormat(player.profit_high[coin] / 2);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        className: 'q-crash2',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }\n      }, num), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"rounded thumb-xs mr-1\",\n        src: avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(UserModal, {\n        username: username,\n        isWinner: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"td\", {\n        className: 'num-style text-white',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: '/assets/images/' + coin + '.png',\n        className: 'mini-coin-2 hidden-sm',\n        alt: coin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }), wagered, \" \", __.upperCase(coin)), /*#__PURE__*/React.createElement(\"td\", {\n        className: 'num-style text-success',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: '/assets/images/' + coin + '.png',\n        className: 'mini-coin-2 hidden-sm',\n        alt: coin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }), prize, \" \", __.upperCase(coin)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"rounded-circle thumb-xs ffi\",\n        src: '/assets/images/badges/badge-' + medal + '.svg',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return Players;\n}(React.Component);\n\nexport default Leaderboard;","map":{"version":3,"names":["React","Helmet","Row","Col","Card","Table","storage","socket","forceSatoshiFormat","wait","__","C","UserModal","Leaderboard","props","makeList","data","then","setState","loading","players","state","emit","TOP_WINNERS","on","t","list","map","player","i","Component","Players","medal","num","console","log","coin","username","name","avatar","wagered","profit_high","prize","upperCase"],"sources":["/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/src/App/Pages/Leaderboard/index.js"],"sourcesContent":["import React from 'react'\r\nimport {Helmet} from 'react-helmet'\r\nimport { Row, Col, Card, Table } from \"react-bootstrap\";\r\nimport storage from \"../../../Storage\";\r\nimport socket from \"../../../Socket\";\r\nimport { forceSatoshiFormat, wait, __} from \"../../../Helper\";\r\nimport C from \"../../../Constant\";\r\nimport UserModal from \"../../Components/User/Stat/Modal\";\r\n\r\nclass Leaderboard extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            players: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        socket.emit(C.TOP_WINNERS);\r\n        socket.on(C.TOP_WINNERS, data => this.makeList(data));\r\n    }\r\n\r\n    makeList = (data) => {\r\n        wait(500).then(() => {\r\n            this.setState({ loading: false, players: data });\r\n        })\r\n    };\r\n\r\n    render(){\r\n        const { t } = this.props;\r\n\r\n        const list = this.state.players.map((player, i) =>\r\n            <Players key={i} medal={i+1} player={player} />\r\n        );\r\n\r\n        return(\r\n                <>\r\n                <Helmet>\r\n                    <title>Leaderboard - Original Crash Game</title>\r\n                </Helmet>\r\n                <div className={'table-responsive last-bets num-style mb-0'}>\r\n                    {\r\n                        this.state.loading ?\r\n                            <div className=\"text-center\">\r\n                                <div class=\"spinner-grow text-white my-3\" role=\"status\"/>\r\n                            </div>\r\n                        :\r\n                        <Table className={\"mb-2\"}>\r\n                            <thead>\r\n                            <tr>\r\n                                <th>\r\n                                   #\r\n                                </th>\r\n                                <th>\r\n                                    {t('username')}\r\n                                </th>\r\n                                <th>\r\n                                    {t('wagered')}\r\n                                </th>\r\n                                <th>\r\n                                    {t('prize')}\r\n                                </th>\r\n                                <th>\r\n                                   {t('medal')}\r\n                                </th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                            {list}\r\n                            </tbody>\r\n                    </Table>\r\n                    }\r\n                </div>\r\n                </>\r\n        );\r\n    }\r\n}\r\n\r\nclass Players extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        let { player, medal } = this.props;\r\n        let num = medal;\r\n\r\n        console.log(player)\r\n        \r\n        if(medal === 10){\r\n            medal = 1\r\n        }\r\n\r\n        let coin = \"btc\"\r\n        let username = player.name;\r\n        let avatar = player.avatar;\r\n        let wagered = forceSatoshiFormat(player.profit_high[coin]);\r\n        let prize = forceSatoshiFormat(player.profit_high[coin] / 2);\r\n\r\n        return(\r\n            <tr className={'q-crash2'}>\r\n                <td>\r\n                    {num}\r\n                </td>\r\n                <td>\r\n                    <img className=\"rounded thumb-xs mr-1\" src={avatar} /> \r\n                    <UserModal username={username} isWinner={false} />\r\n                </td>\r\n                <td className={'num-style text-white'}>\r\n                    <img src={'/assets/images/' + (coin) + '.png'} className={'mini-coin-2 hidden-sm'} alt={coin}/>\r\n                    {wagered} {(__.upperCase(coin))}\r\n                </td>\r\n                <td className={'num-style text-success'}>\r\n                    <img src={'/assets/images/' + (coin) + '.png'} className={'mini-coin-2 hidden-sm'} alt={coin}/>\r\n                    {prize} {(__.upperCase(coin))}\r\n                </td>\r\n                <td>\r\n                    <img className=\"rounded-circle thumb-xs ffi\" src={'/assets/images/badges/badge-' + medal + '.svg'} /> \r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Leaderboard;"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,KAAzB,QAAsC,iBAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,kBAAT,EAA6BC,IAA7B,EAAmCC,EAAnC,QAA4C,iBAA5C;AACA,OAAOC,CAAP,MAAc,mBAAd;AACA,OAAOC,SAAP,MAAsB,kCAAtB;;IAEMC,W;;;;;EACF,qBAAYC,KAAZ,EAAkB;IAAA;;IAAA;;IACd,0BAAMA,KAAN;;IADc,MAalBC,QAbkB,GAaP,UAACC,IAAD,EAAU;MACjBP,IAAI,CAAC,GAAD,CAAJ,CAAUQ,IAAV,CAAe,YAAM;QACjB,MAAKC,QAAL,CAAc;UAAEC,OAAO,EAAE,KAAX;UAAkBC,OAAO,EAAEJ;QAA3B,CAAd;MACH,CAFD;IAGH,CAjBiB;;IAEd,MAAKK,KAAL,GAAa;MACTF,OAAO,EAAE,IADA;MAETC,OAAO,EAAE;IAFA,CAAb;IAFc;EAMjB;;;;WAED,6BAAoB;MAAA;;MAChBb,MAAM,CAACe,IAAP,CAAYX,CAAC,CAACY,WAAd;MACAhB,MAAM,CAACiB,EAAP,CAAUb,CAAC,CAACY,WAAZ,EAAyB,UAAAP,IAAI;QAAA,OAAI,MAAI,CAACD,QAAL,CAAcC,IAAd,CAAJ;MAAA,CAA7B;IACH;;;WAQD,kBAAQ;MAAA;;MACJ,IAAQS,CAAR,GAAc,KAAKX,KAAnB,CAAQW,CAAR;MAEA,IAAMC,IAAI,GAAG,KAAKL,KAAL,CAAWD,OAAX,CAAmBO,GAAnB,CAAuB,UAACC,MAAD,EAASC,CAAT;QAAA,oBAChC,oBAAC,OAAD;UAAS,GAAG,EAAEA,CAAd;UAAiB,KAAK,EAAEA,CAAC,GAAC,CAA1B;UAA6B,MAAM,EAAED,MAArC;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,EADgC;MAAA,CAAvB,CAAb;MAIA,oBACQ,uDACA,oBAAC,MAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,uCADJ,CADA,eAIA;QAAK,SAAS,EAAE,2CAAhB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAEQ,KAAKP,KAAL,CAAWF,OAAX,gBACI;QAAK,SAAS,EAAC,aAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,KAAK,EAAC,8BAAX;QAA0C,IAAI,EAAC,QAA/C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,CADJ,gBAKA,oBAAC,KAAD;QAAO,SAAS,EAAE,MAAlB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,OADJ,eAII;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACKM,CAAC,CAAC,UAAD,CADN,CAJJ,eAOI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACKA,CAAC,CAAC,SAAD,CADN,CAPJ,eAUI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACKA,CAAC,CAAC,OAAD,CADN,CAVJ,eAaI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACIA,CAAC,CAAC,OAAD,CADL,CAbJ,CADA,CADJ,eAoBI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACCC,IADD,CApBJ,CAPR,CAJA,CADR;IAwCH;;;;EAnEqB1B,KAAK,CAAC8B,S;;IAsE1BC,O;;;;;EACF,iBAAYjB,KAAZ,EAAkB;IAAA;;IAAA,0BACRA,KADQ;EAEjB;;;;WACD,kBAAS;MACL,kBAAwB,KAAKA,KAA7B;MAAA,IAAMc,MAAN,eAAMA,MAAN;MAAA,IAAcI,KAAd,eAAcA,KAAd;MACA,IAAIC,GAAG,GAAGD,KAAV;MAEAE,OAAO,CAACC,GAAR,CAAYP,MAAZ;;MAEA,IAAGI,KAAK,KAAK,EAAb,EAAgB;QACZA,KAAK,GAAG,CAAR;MACH;;MAED,IAAII,IAAI,GAAG,KAAX;MACA,IAAIC,QAAQ,GAAGT,MAAM,CAACU,IAAtB;MACA,IAAIC,MAAM,GAAGX,MAAM,CAACW,MAApB;MACA,IAAIC,OAAO,GAAGhC,kBAAkB,CAACoB,MAAM,CAACa,WAAP,CAAmBL,IAAnB,CAAD,CAAhC;MACA,IAAIM,KAAK,GAAGlC,kBAAkB,CAACoB,MAAM,CAACa,WAAP,CAAmBL,IAAnB,IAA2B,CAA5B,CAA9B;MAEA,oBACI;QAAI,SAAS,EAAE,UAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACKH,GADL,CADJ,eAII;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,SAAS,EAAC,uBAAf;QAAuC,GAAG,EAAEM,MAA5C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,eAEI,oBAAC,SAAD;QAAW,QAAQ,EAAEF,QAArB;QAA+B,QAAQ,EAAE,KAAzC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFJ,CAJJ,eAQI;QAAI,SAAS,EAAE,sBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,GAAG,EAAE,oBAAqBD,IAArB,GAA6B,MAAvC;QAA+C,SAAS,EAAE,uBAA1D;QAAmF,GAAG,EAAEA,IAAxF;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,EAEKI,OAFL,OAEgB9B,EAAE,CAACiC,SAAH,CAAaP,IAAb,CAFhB,CARJ,eAYI;QAAI,SAAS,EAAE,wBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,GAAG,EAAE,oBAAqBA,IAArB,GAA6B,MAAvC;QAA+C,SAAS,EAAE,uBAA1D;QAAmF,GAAG,EAAEA,IAAxF;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,EAEKM,KAFL,OAEchC,EAAE,CAACiC,SAAH,CAAaP,IAAb,CAFd,CAZJ,eAgBI;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI;QAAK,SAAS,EAAC,6BAAf;QAA6C,GAAG,EAAE,iCAAiCJ,KAAjC,GAAyC,MAA3F;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,CAhBJ,CADJ;IAsBH;;;;EA1CiBhC,KAAK,CAAC8B,S;;AA6C5B,eAAejB,WAAf"},"metadata":{},"sourceType":"module"}