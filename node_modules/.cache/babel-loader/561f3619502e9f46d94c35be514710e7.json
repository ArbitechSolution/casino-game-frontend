{"ast":null,"code":"import _toConsumableArray from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/src/App/Pages/Parts/Chat/Messages.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Col, Row, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Scroll from \"react-scroll\";\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { setName } from \"../../../../actions/gameChat\";\nimport socket from \"../../../../Socket\";\nimport storage from \"../../../../Storage\";\nimport UserModal from \"../../../Components/User/Stat/Modal\";\nimport { getElement, __, wait, encode, decode, defaultAvatar, isUTF8, Event, sendNotfication } from \"../../../../Helper\";\nimport C from \"../../../../Constant\";\nvar Element = Scroll.Element;\nvar SC = Scroll.scroller;\n\nvar Messages = /*#__PURE__*/function (_React$Component) {\n  _inherits(Messages, _React$Component);\n\n  var _super = _createSuper(Messages);\n\n  function Messages(props) {\n    var _this;\n\n    _classCallCheck(this, Messages);\n\n    _this = _super.call(this, props);\n    _this.bubble = 'none';\n    _this.bubbleMsg = 0;\n    _this._isMounted = false;\n\n    _this.setLoader = function () {\n      if (_this._isMounted) {\n        var icon = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ycenter\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          class: \"spinner-border text-info\",\n          role: \"status\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 42\n          }\n        }));\n\n        _this.setState({\n          loader: icon\n        });\n      }\n    };\n\n    _this.hideBubble = function () {\n      if (_this._isMounted) {\n        SC.scrollTo('chatBarElement', {\n          delay: 3,\n          smooth: true,\n          containerId: 'messages',\n          offset: getElement('#sc').scrollHeight * 2\n        });\n        getElement('.chat-bubble').classList.add('hidden');\n        _this.bubbleMsg = 0;\n      }\n    };\n\n    _this.state = {\n      alertSpam: false,\n      messages: [],\n      loader: [],\n      clientCountry: storage.getKey('country') ? storage.getKey('country') : \"GLOBAL\"\n    };\n    return _this;\n  }\n\n  _createClass(Messages, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this._isMounted = true;\n      this.setLoader();\n      wait(2500).then(function () {\n        var c = _this2.state.clientCountry;\n        socket.emit(C.CHATS, c);\n      });\n      socket.on(C.CHATS, function (data) {\n        return _this2.getChats(data);\n      });\n      socket.on(C.ADD_CHAT, function (data) {\n        return _this2.getNewChats(data);\n      }); // Event.on('twitch', data => this.getNewChats(data));\n\n      Event.on('scrolldone', function () {\n        return _this2.updateScroll();\n      });\n      this.updateScroll();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps, nextContext) {\n      var _this3 = this;\n\n      if (this._isMounted) {\n        if (nextProps.country) {\n          this.setState({\n            clientCountry: nextProps.country,\n            messages: []\n          });\n          this.setLoader();\n          wait(500).then(function () {\n            var c = nextProps.country;\n\n            if (__.lowerCase(c) === \"spam\") {\n              _this3.setState({\n                alertSpam: true\n              });\n\n              Event.emit('open_socket');\n            } else {\n              _this3.setState({\n                alertSpam: false\n              });\n\n              Event.emit('close_socket');\n            }\n\n            socket.emit(C.CHATS, c);\n          });\n        }\n\n        this.updateScroll();\n      }\n    }\n  }, {\n    key: \"componentWillUpdate\",\n    value: function componentWillUpdate(nextProps, nextState, nextContext) {\n      if (this._isMounted) {\n        var e = getElement('#messages'),\n            t = e.clientHeight,\n            n = e.scrollHeight,\n            r = e.scrollTop;\n        this.scrollBottom = n - r - t;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      if (this._isMounted) {\n        this.updateScroll();\n\n        if (this.state.messages.length >= 150) {\n          var slice = __.slice(this.state.messages, this.state.messages.length - 1, this.state.messages.length);\n\n          this.setState({\n            messages: slice\n          });\n          this.state.messages.length = 150;\n        }\n      }\n    }\n  }, {\n    key: \"updateScroll\",\n    value: function updateScroll() {\n      if (this._isMounted) {\n        if (this.scrollBottom <= 150) {\n          SC.scrollTo('chatBarElement', {\n            delay: 3,\n            smooth: true,\n            containerId: 'messages',\n            offset: getElement('#sc').scrollHeight * 2\n          });\n          getElement('.chat-bubble').classList.add('hidden');\n          this.bubbleMsg = 0;\n        } else {\n          this.bubbleMsg += 1;\n\n          if (this.bubbleMsg !== 0) {\n            getElement('.chat-bubble').classList.remove('hidden');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getChats\",\n    value: function getChats(data) {\n      var _this4 = this;\n\n      if (this._isMounted) {\n        this.setState({\n          messages: [],\n          loader: []\n        });\n        sortByTime(data).forEach(function (message, i) {\n          _this4.setState(function (state) {\n            return {\n              messages: [/*#__PURE__*/React.createElement(Message, {\n                t: _this4.props.t,\n                key: i,\n                message: message,\n                redux: _this4.props,\n                __self: _this4,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 54\n                }\n              })].concat(_toConsumableArray(state.messages))\n            };\n          });\n        });\n      }\n    }\n  }, {\n    key: \"getNewChats\",\n    value: function getNewChats(message) {\n      if (this._isMounted) {\n        var country = this.props.country;\n        var currentCountry = country ? country : this.state.clientCountry;\n\n        if (__.upperCase(message.country) === __.upperCase(currentCountry)) {\n          var add = this.state.messages.concat([/*#__PURE__*/React.createElement(Message, {\n            t: this.props.t,\n            key: this.state.messages.length + 1,\n            message: message,\n            redux: this.props,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }\n          })]);\n          this.setState({\n            messages: add\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Element, {\n        name: \"chatBarElement\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav chats\",\n        id: 'sc',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: this.hideBubble,\n        className: 'chat-bubble',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, this.bubbleMsg), this.state.loader, this.state.messages));\n    }\n  }]);\n\n  return Messages;\n}(React.Component);\n\nvar Message = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Message, _React$Component2);\n\n  var _super2 = _createSuper(Message);\n\n  function Message(props) {\n    var _this5;\n\n    _classCallCheck(this, Message);\n\n    _this5 = _super2.call(this, props);\n\n    _this5.isSharing = function (value) {\n      if (__.isString(value)) {\n        var test = value.substr(0, 5);\n        if (test === '{\"gam' || test === '{\"uid') return true;else return false;\n      } else return true;\n    };\n\n    _this5.makeStars = function (num) {\n      var stars = 5;\n      var userLevel = stars - parseFloat(num);\n      var g = [],\n          o = [],\n          f = [];\n\n      for (var i = 0; i < userLevel; i++) {\n        g.push( /*#__PURE__*/React.createElement(\"i\", {\n          className: 'mdi mdi-star',\n          __self: _assertThisInitialized(_this5),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 24\n          }\n        }));\n      }\n\n      for (var i = 0; i < num; i++) {\n        o.push( /*#__PURE__*/React.createElement(\"i\", {\n          className: 'mdi mdi-star text-success',\n          __self: _assertThisInitialized(_this5),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 24\n          }\n        }));\n      }\n\n      f.push(o, g);\n      return f;\n    };\n\n    _this5.hiddenAlert = function () {\n      return sendNotfication('All users in the spam room are hidden!', 'warning', 'bottom-center');\n    };\n\n    _this5.state = {\n      name: storage.getKey('name')\n    };\n    return _this5;\n  }\n\n  _createClass(Message, [{\n    key: \"callUser\",\n    value: function callUser(name) {\n      Event.emit('call_user', '@' + name + ' ');\n    }\n  }, {\n    key: \"createMarkup\",\n    value: function createMarkup(msg) {\n      return {\n        __html: msg\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props = this.props,\n          t = _this$props.t,\n          key = _this$props.key;\n      var _this$props$message = this.props.message,\n          name = _this$props$message.name,\n          message = _this$props$message.message,\n          avatar = _this$props$message.avatar,\n          time = _this$props$message.time,\n          level = _this$props$message.level,\n          twitch = _this$props$message.twitch;\n      var content = message;\n      var username = name;\n      var style;\n      var isNotSelf = false;\n      var highlight = '';\n      avatar = avatar !== 'false' ? avatar : defaultAvatar; // if(isUTF8(message)){\n      //     style = {\n      //         float: \"right\"\n      //     }\n      // }\n      //System Message\n\n      if (username === 'SystemBot') {\n        style = {\n          background: '#673ab7'\n        };\n      }\n\n      if (this.state.name === username) isNotSelf = true;\n\n      if (!this.isSharing(message)) {\n        var r = new RegExp('@' + this.state.name + '(?:$|[^a-z0-9_\\-])', 'i');\n\n        if (this.state.name !== username && r.test(message)) {\n          // new Audio('/assets/sounds/ding.mp3').play();\n          highlight += 'highlight-on';\n        } //Check Links\n\n\n        var expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\n        var regex = new RegExp(expression);\n\n        if (message.match(regex)) {\n          var hidden = t('link_is_hidden');\n          message = /*#__PURE__*/React.createElement(\"div\", {\n            dangerouslySetInnerHTML: this.createMarkup(\"<span className=\\\"text-danger\\\">[ \".concat(hidden, \" ]</span>\")),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 27\n            }\n          });\n        }\n\n        var arr = []; //Check Usernames Calls\n\n        var check = __.words(message, /@([a-zA-Z0-9]+)/gi);\n\n        if (!twitch) {\n          if (check.length !== 0) {\n            var _loop = function _loop(i) {\n              var username = check[i];\n              var link = /*#__PURE__*/React.createElement(\"span\", {\n                key: i,\n                className: \"text-warning\",\n                __self: _this6,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 36\n                }\n              }, \" @\", /*#__PURE__*/React.createElement(UserModal, {\n                key: i,\n                username: __.replace(username, '@', ''),\n                cssClass: \"text-warning\",\n                __self: _this6,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 77\n                }\n              })); // arr.push(link)\n\n              try {\n                message = message.split(\" \").map(function (c) {\n                  return c === username ? link : \" \" + c;\n                });\n              } catch (e) {}\n            };\n\n            for (var i = 0; i < check.length; i++) {\n              _loop(i);\n            }\n          }\n        }\n      } else {\n        style = {\n          width: '100%'\n        };\n\n        if (__.isString(message)) {\n          message = JSON.parse(message);\n        }\n\n        var isLost = false;\n        var profit = parseFloat(message.profit);\n\n        if (profit === 0 || profit === 0.00000000) {\n          isLost = true;\n        }\n\n        message = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"share-result\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 22\n          }\n        }, isLost ? /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"text-danger text-center mt-0 mb-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }\n        }, t('lost')) : /*#__PURE__*/React.createElement(\"h4\", {\n          className: \"text-warning text-center mt-0 mb-3 trmg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"/assets/images/contest.png\",\n          class: \"img-fluid\",\n          style: {\n            width: 40\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }\n        }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 106\n          }\n        }), \" \", t('winner')), /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          sm: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-success bg-soft-info rounded py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }\n        }, message.result, \"x \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 99\n          }\n        }), \" \", t('result'))), /*#__PURE__*/React.createElement(Col, {\n          md: \"6\",\n          sm: \"6\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"text-white bg-soft-info rounded py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"mini-coin-8 mr-1\",\n          src: '/assets/images/' + __.lowerCase(message.coin) + '.png',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 29\n          }\n        }), message.profit, \" \", /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 46\n          }\n        }), \" \", t('profit'))), /*#__PURE__*/React.createElement(Col, {\n          md: \"12\",\n          sm: \"12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"bg-soft-info text-white rounded mt-3 py-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }\n        }, \"ID: \", message.gid))));\n      } // message = __.replace(message, /@([a-zA-Z0-9]+)/gi, `<a class=\"text-warning\" href=\"/user/$1\">@$1</a>`)\n\n\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: __.toString(key),\n        className: 'nav-item chat-part animated XfadeIn ' + highlight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(UserModal, {\n        t: t,\n        level: level,\n        cssClass: 'user-avatar ml-1',\n        username: username,\n        chat: true,\n        avatar: avatar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }\n      }), !isNotSelf && !twitch && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"chat-option float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: 'font-15',\n        onClick: function onClick() {\n          return _this6.callUser(username);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: 'list-inline-item mt-2 font-20',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 34\n        }\n      }, \"@\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: 'msg font-light',\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }\n      }, message), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'chat-date',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }\n      }, time));\n    }\n  }]);\n\n  return Message;\n}(React.Component);\n\nfunction sortByTime(input) {\n  function r(c) {\n    return c.sorter ? -c.sorter : null;\n  }\n\n  return __.sortBy(input, r);\n}\n\nMessages.propTypes = {\n  country: PropTypes.string\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    country: state.items.country\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setName: setName\n})(Messages);","map":{"version":3,"names":["React","PropTypes","Col","Row","Card","connect","Scroll","Skeleton","setName","socket","storage","UserModal","getElement","__","wait","encode","decode","defaultAvatar","isUTF8","Event","sendNotfication","C","Element","SC","scroller","Messages","props","bubble","bubbleMsg","_isMounted","setLoader","icon","setState","loader","hideBubble","scrollTo","delay","smooth","containerId","offset","scrollHeight","classList","add","state","alertSpam","messages","clientCountry","getKey","then","c","emit","CHATS","on","data","getChats","ADD_CHAT","getNewChats","updateScroll","nextProps","nextContext","country","lowerCase","nextState","e","t","clientHeight","n","r","scrollTop","scrollBottom","prevProps","prevState","snapshot","length","slice","remove","sortByTime","forEach","message","i","currentCountry","upperCase","concat","Component","Message","isSharing","value","isString","test","substr","makeStars","num","stars","userLevel","parseFloat","g","o","f","push","hiddenAlert","name","msg","__html","key","avatar","time","level","twitch","content","username","style","isNotSelf","highlight","background","RegExp","expression","regex","match","hidden","createMarkup","arr","check","words","link","replace","split","map","width","JSON","parse","isLost","profit","result","coin","gid","toString","callUser","input","sorter","sortBy","propTypes","string","mapStateToProps","items"],"sources":["/Users/imac/Downloads/Crash.BTC.Updated.V2.DEV/Frontend/src/App/Pages/Parts/Chat/Messages.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Col, Row, Card} from \"react-bootstrap\";\r\nimport {connect} from \"react-redux\";\r\nimport Scroll from \"react-scroll\";\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport {setName} from \"../../../../actions/gameChat\";\r\nimport socket from \"../../../../Socket\";\r\nimport storage from \"../../../../Storage\";\r\nimport UserModal from \"../../../Components/User/Stat/Modal\";\r\nimport { getElement, __, wait, encode, decode, defaultAvatar, isUTF8, Event, sendNotfication } from \"../../../../Helper\";\r\nimport C from \"../../../../Constant\";\r\n\r\nconst Element = Scroll.Element;\r\nconst SC = Scroll.scroller;\r\n\r\nclass Messages extends React.Component {\r\n    bubble = 'none';\r\n    bubbleMsg = 0;\r\n    _isMounted = false;\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            alertSpam: false,\r\n            messages: [],\r\n            loader: [],\r\n            clientCountry: storage.getKey('country') ? storage.getKey('country'): \"GLOBAL\",\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.setLoader();\r\n\r\n        wait(2500).then(() => {\r\n            var c = this.state.clientCountry;\r\n            socket.emit(C.CHATS, c);\r\n        });\r\n\r\n        socket.on(C.CHATS, data => this.getChats((data)));\r\n        socket.on(C.ADD_CHAT, data => this.getNewChats((data)));\r\n        // Event.on('twitch', data => this.getNewChats(data));\r\n\r\n        Event.on('scrolldone', () => this.updateScroll());\r\n        this.updateScroll();\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this._isMounted = false;\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if(this._isMounted){\r\n            if(nextProps.country)\r\n            {\r\n                this.setState({ clientCountry: nextProps.country, messages: []});\r\n                this.setLoader();\r\n\r\n                wait(500).then(() => {\r\n                    var c = nextProps.country;\r\n\r\n                    if(__.lowerCase(c) === \"spam\"){\r\n                        this.setState({ alertSpam: true });\r\n                        Event.emit('open_socket');\r\n                    }\r\n                    else {\r\n                        this.setState({ alertSpam: false});\r\n                        Event.emit('close_socket');\r\n                    }\r\n\r\n                    socket.emit(C.CHATS, c);\r\n                });\r\n            }\r\n            this.updateScroll();\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if(this._isMounted){\r\n            let e = getElement('#messages'),\r\n                t = e.clientHeight,\r\n                n = e.scrollHeight,\r\n                r = e.scrollTop;\r\n            this.scrollBottom = n - r - t\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif(this._isMounted){\r\n\t\t\tthis.updateScroll();\r\n\t\t\tif(this.state.messages.length >= 150){\r\n\t\t\t\tvar slice = __.slice(this.state.messages, this.state.messages.length - 1 , this.state.messages.length);\r\n\t\t\t\tthis.setState({ messages: slice })\r\n\t\t\t\tthis.state.messages.length = 150;\r\n\t\t\t}\r\n        }\r\n    }\r\n\r\n    updateScroll(){\r\n        if(this._isMounted)\r\n        {\r\n           if(this.scrollBottom <= 150){\r\n                SC.scrollTo('chatBarElement', {\r\n                    delay: 3,\r\n                    smooth: true,\r\n                    containerId: 'messages',\r\n                    offset: getElement('#sc').scrollHeight * 2,\r\n                });\r\n                getElement('.chat-bubble').classList.add('hidden');\r\n                this.bubbleMsg = 0;\r\n            }\r\n            else {\r\n                this.bubbleMsg += 1;\r\n                if(this.bubbleMsg !== 0){\r\n                    getElement('.chat-bubble').classList.remove('hidden');\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    setLoader = () => {\r\n        if(this._isMounted)\r\n        {\r\n\t\t\tconst icon = <div className=\"ycenter\"><div class=\"spinner-border text-info\" role=\"status\" /></div>;\r\n\t\t\tthis.setState({ loader: icon })\r\n\t\t}\r\n    };\r\n\r\n    getChats(data) {\r\n        if(this._isMounted){\r\n            this.setState({ messages: [], loader: [] });\r\n            sortByTime(data).forEach((message, i) => {\r\n                this.setState(state => ({ messages: [<Message t={this.props.t} key={i} message={message} redux={this.props} />, ...state.messages] }));\r\n            });\r\n        }\r\n    }\r\n\r\n    getNewChats(message) {\r\n        if(this._isMounted){\r\n            let { country } = this.props;\r\n            let currentCountry = country ? country: this.state.clientCountry;\r\n\r\n            if(__.upperCase(message.country) === __.upperCase(currentCountry))\r\n            {\r\n                let add = this.state.messages.concat([\r\n                    <Message t={this.props.t} key={this.state.messages.length + 1} message={message} redux={this.props} />\r\n                ]);\r\n                this.setState({ messages: add });\r\n            }\r\n        }\r\n    }\r\n\r\n    hideBubble = () =>{\r\n        if(this._isMounted)\r\n        {\r\n\t\t\tSC.scrollTo('chatBarElement', {\r\n\t\t\t\tdelay: 3,\r\n\t\t\t\tsmooth: true,\r\n\t\t\t\tcontainerId: 'messages',\r\n\t\t\t\toffset: getElement('#sc').scrollHeight * 2,\r\n\t\t\t});\r\n\t\t\tgetElement('.chat-bubble').classList.add('hidden');\r\n\t\t\tthis.bubbleMsg = 0;\r\n\t\t}\r\n    }\r\n\r\n    render(){\r\n        return(\r\n                <Element name=\"chatBarElement\">\r\n                    <ul className=\"nav chats\" id={'sc'}>\r\n                        <div onClick={this.hideBubble} className={'chat-bubble'}>\r\n                            {this.bubbleMsg}\r\n                        </div>\r\n                        {this.state.loader}\r\n                        {this.state.messages}\r\n                    </ul>\r\n                </Element>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: storage.getKey('name')\r\n        }\r\n    }\r\n\r\n    callUser(name){\r\n        Event.emit('call_user', '@' + name + ' ')\r\n    }\r\n\r\n    createMarkup(msg) {\r\n        return { __html: msg };\r\n    }\r\n\r\n    isSharing = (value) => {\r\n        if(__.isString(value)){\r\n            let test = value.substr(0, 5);\r\n            if( test === '{\"gam' || test === '{\"uid' )\r\n                return true;\r\n            else \r\n                return false;\r\n        }\r\n        else\r\n\t\t\treturn true;\r\n    }\r\n\r\n    makeStars = (num) => {\r\n            let stars = 5;\r\n            let userLevel = stars - parseFloat(num);\r\n            var g = [], o = [], f = [];\r\n            for(var i = 0; i < userLevel; i++){\r\n                g.push(<i className={'mdi mdi-star'} />);\r\n            }\r\n            for(var i = 0; i < num; i++){\r\n                o.push(<i className={'mdi mdi-star text-success'} />);\r\n            }\r\n            f.push(o, g);\r\n            return f;\r\n    }\r\n\r\n    hiddenAlert = () => {\r\n        return sendNotfication('All users in the spam room are hidden!', 'warning', 'bottom-center');\r\n    }\r\n\r\n    render() {\r\n        const { t, key } = this.props;\r\n        let { name, message, avatar, time, level, twitch } = this.props.message;\r\n        const content = message;\r\n        let username = name;\r\n        let style;\r\n        let isNotSelf = false;\r\n        let highlight = '';\r\n        avatar = avatar !== 'false' ? avatar : defaultAvatar;\r\n\r\n        // if(isUTF8(message)){\r\n        //     style = {\r\n        //         float: \"right\"\r\n        //     }\r\n        // }\r\n\r\n        //System Message\r\n        if(username === 'SystemBot'){\r\n            style = {\r\n                background: '#673ab7'\r\n            }\r\n        }\r\n\r\n        if(this.state.name === username)\r\n            isNotSelf = true;\r\n\r\n        if(!this.isSharing(message))\r\n        {\r\n            let r = new RegExp('@' + this.state.name + '(?:$|[^a-z0-9_\\-])', 'i');\r\n            if (this.state.name !== username && r.test(message)){\r\n                // new Audio('/assets/sounds/ding.mp3').play();\r\n                highlight += 'highlight-on';\r\n            }\r\n\r\n            //Check Links\r\n            var expression = /https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/gi;\r\n            var regex = new RegExp(expression);\r\n            if (message.match(regex)) {\r\n                let hidden = t('link_is_hidden');\r\n                message = <div dangerouslySetInnerHTML={this.createMarkup(`<span className=\"text-danger\">[ ${hidden} ]</span>`)} />;\r\n            }\r\n\r\n            var arr = [];\r\n            \r\n            //Check Usernames Calls\r\n            let check = __.words(message, /@([a-zA-Z0-9]+)/gi);\r\n            if(!twitch){\r\n                if (check.length !== 0) {\r\n                    for( let i = 0; i < check.length; i++)\r\n                    {\r\n                        let username = check[i];\r\n                        let link = <span key={i} className=\"text-warning\"> @<UserModal key={i} username={__.replace(username, '@', '')} cssClass=\"text-warning\" /></span>;\r\n                        // arr.push(link)\r\n                        try {\r\n                            message = message.split(\" \").map((c) => (c === username ? link : \" \" + c));\r\n                        } catch (e) {}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            style = {\r\n                width: '100%'\r\n            }\r\n\r\n            if(__.isString(message)){\r\n                message = JSON.parse(message)\r\n            }\r\n\r\n            var isLost = false;\r\n            var profit = parseFloat(message.profit);\r\n\r\n            if (profit === 0 || profit === 0.00000000) {\r\n                isLost = true;\r\n            }\r\n\r\n           message = <div className=\"share-result\">\r\n                { isLost ?\r\n                    <h4 className=\"text-danger text-center mt-0 mb-3\">{t('lost')}</h4>\r\n                    :\r\n                    <h4 className=\"text-warning text-center mt-0 mb-3 trmg\">\r\n                        <img src=\"/assets/images/contest.png\" class=\"img-fluid\" style={{ width: 40 }} /> <br/> {t('winner')}\r\n                    </h4>\r\n                }\r\n                <Row>\r\n                    <Col md=\"6\" sm=\"6\">\r\n                        <div className=\"text-success bg-soft-info rounded py-2\">{message.result}x <br/> {t('result')}</div>\r\n                    </Col>\r\n                    <Col md=\"6\" sm=\"6\">\r\n                        <div className=\"text-white bg-soft-info rounded py-2\">\r\n                            <img className=\"mini-coin-8 mr-1\" src={'/assets/images/' + __.lowerCase(message.coin) + '.png'} />\r\n                            {message.profit} <br/> {t('profit')}\r\n                        </div>\r\n                    </Col>\r\n                    <Col md=\"12\" sm=\"12\">\r\n                        <div className=\"bg-soft-info text-white rounded mt-3 py-2\">ID: {message.gid}</div>\r\n                    </Col>\r\n                </Row>\r\n           </div>\r\n        }\r\n\r\n         // message = __.replace(message, /@([a-zA-Z0-9]+)/gi, `<a class=\"text-warning\" href=\"/user/$1\">@$1</a>`)\r\n\r\n        return(\r\n                <li key={__.toString(key)} className={'nav-item chat-part animated XfadeIn ' + highlight}>\r\n                    <UserModal t={t} level={level} cssClass={'user-avatar ml-1'} username={username} chat={true} avatar={avatar} />\r\n                    { (!isNotSelf && !twitch) && <>\r\n                        <div className=\"chat-option float-right\">\r\n                            <span className={'font-15'} onClick={() => this.callUser(username)}>\r\n                                 <span className={'list-inline-item mt-2 font-20'}>@</span>\r\n                            </span>\r\n                        </div>\r\n                    </>}\r\n                    <div className={'msg font-light'} style={ style }>\r\n                        {message}\r\n                        {/*{arr.length !== 0 ?\r\n                            <div dangerouslySetInnerHTML={this.createMarkup(message)} />\r\n                        :\r\n                            message\r\n                        }*/}\r\n                    </div>\r\n                    <span className={'chat-date'}>{time}</span>\r\n                </li>\r\n        );\r\n    }\r\n}\r\n\r\nfunction sortByTime(input) {\r\n    function r(c) {\r\n        return c.sorter ? - c.sorter : null;\r\n    }\r\n    return __.sortBy(input, r);\r\n}\r\n\r\nMessages.propTypes = {\r\n    country: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    country: state.items.country\r\n});\r\n\r\nexport default connect(mapStateToProps, { setName })(Messages);"],"mappings":"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"},"metadata":{},"sourceType":"module"}